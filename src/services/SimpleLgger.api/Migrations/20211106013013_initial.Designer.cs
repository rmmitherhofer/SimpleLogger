// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleLogger.api.Data;

namespace SimpleLogger.api.Migrations
{
    [DbContext(typeof(LoggerContext))]
    [Migration("20211106013013_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SimpleLogger.api.Model.Client", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ClientAdress")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ExternalAddress")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("HostName")
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("LogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OperationSystem")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("OperatorAddress")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Error", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tracer")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LogId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Erros");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Log", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TimeProcess")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Request", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Form")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Headers")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("LogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sise")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Uri")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("UserAgent")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("Requisicoes");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Response", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Headers")
                        .HasColumnType("varchar(max)");

                    b.Property<Guid>("LogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Sise")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("StatusCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("Respostas");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Client", b =>
                {
                    b.HasOne("SimpleLogger.api.Model.Log", "Log")
                        .WithOne("Client")
                        .HasForeignKey("SimpleLogger.api.Model.Client", "LogId")
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Error", b =>
                {
                    b.HasOne("SimpleLogger.api.Model.Log", "Log")
                        .WithMany("Errors")
                        .HasForeignKey("LogId")
                        .IsRequired();

                    b.HasOne("SimpleLogger.api.Model.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Log");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Log", b =>
                {
                    b.HasOne("SimpleLogger.api.Model.Project", "Project")
                        .WithMany("Logs")
                        .HasForeignKey("ProjectId")
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Request", b =>
                {
                    b.HasOne("SimpleLogger.api.Model.Log", "Log")
                        .WithOne("Request")
                        .HasForeignKey("SimpleLogger.api.Model.Request", "LogId")
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Response", b =>
                {
                    b.HasOne("SimpleLogger.api.Model.Log", "Log")
                        .WithOne("Response")
                        .HasForeignKey("SimpleLogger.api.Model.Response", "LogId")
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Log", b =>
                {
                    b.Navigation("Client");

                    b.Navigation("Errors");

                    b.Navigation("Request");

                    b.Navigation("Response");
                });

            modelBuilder.Entity("SimpleLogger.api.Model.Project", b =>
                {
                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
